### YamlMime:ManagedReference
items:
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainerExtensions
  commentId: T:UnityScreenNavigator.Runtime.Core.Modal.ModalContainerExtensions
  id: ModalContainerExtensions
  parent: UnityScreenNavigator.Runtime.Core.Modal
  children:
  - UnityScreenNavigator.Runtime.Core.Modal.ModalContainerExtensions.AddCallbackReceiver(UnityScreenNavigator.Runtime.Core.Modal.ModalContainer,Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Modal.Modal,UnityScreenNavigator.Runtime.Core.Modal.Modal}},Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Modal.Modal,UnityScreenNavigator.Runtime.Core.Modal.Modal}},Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Modal.Modal,UnityScreenNavigator.Runtime.Core.Modal.Modal}},Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Modal.Modal,UnityScreenNavigator.Runtime.Core.Modal.Modal}})
  - UnityScreenNavigator.Runtime.Core.Modal.ModalContainerExtensions.AddCallbackReceiver(UnityScreenNavigator.Runtime.Core.Modal.ModalContainer,UnityScreenNavigator.Runtime.Core.Modal.Modal,Action{UnityScreenNavigator.Runtime.Core.Modal.Modal},Action{UnityScreenNavigator.Runtime.Core.Modal.Modal},Action{UnityScreenNavigator.Runtime.Core.Modal.Modal},Action{UnityScreenNavigator.Runtime.Core.Modal.Modal})
  langs:
  - csharp
  - vb
  name: ModalContainerExtensions
  nameWithType: ModalContainerExtensions
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainerExtensions
  type: Class
  source:
    id: ModalContainerExtensions
    path: ''
    startLine: 2255
  assemblies:
  - cs.temp.dll
  namespace: UnityScreenNavigator.Runtime.Core.Modal
  syntax:
    content: public static class ModalContainerExtensions
    content.vb: Public Module ModalContainerExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainerExtensions.AddCallbackReceiver(UnityScreenNavigator.Runtime.Core.Modal.ModalContainer,Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Modal.Modal,UnityScreenNavigator.Runtime.Core.Modal.Modal}},Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Modal.Modal,UnityScreenNavigator.Runtime.Core.Modal.Modal}},Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Modal.Modal,UnityScreenNavigator.Runtime.Core.Modal.Modal}},Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Modal.Modal,UnityScreenNavigator.Runtime.Core.Modal.Modal}})
  commentId: M:UnityScreenNavigator.Runtime.Core.Modal.ModalContainerExtensions.AddCallbackReceiver(UnityScreenNavigator.Runtime.Core.Modal.ModalContainer,Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Modal.Modal,UnityScreenNavigator.Runtime.Core.Modal.Modal}},Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Modal.Modal,UnityScreenNavigator.Runtime.Core.Modal.Modal}},Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Modal.Modal,UnityScreenNavigator.Runtime.Core.Modal.Modal}},Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Modal.Modal,UnityScreenNavigator.Runtime.Core.Modal.Modal}})
  id: AddCallbackReceiver(UnityScreenNavigator.Runtime.Core.Modal.ModalContainer,Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Modal.Modal,UnityScreenNavigator.Runtime.Core.Modal.Modal}},Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Modal.Modal,UnityScreenNavigator.Runtime.Core.Modal.Modal}},Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Modal.Modal,UnityScreenNavigator.Runtime.Core.Modal.Modal}},Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Modal.Modal,UnityScreenNavigator.Runtime.Core.Modal.Modal}})
  isExtensionMethod: true
  parent: UnityScreenNavigator.Runtime.Core.Modal.ModalContainerExtensions
  langs:
  - csharp
  - vb
  name: AddCallbackReceiver(ModalContainer, Action<(Modal enterModal, Modal exitModal)>, Action<(Modal enterModal, Modal exitModal)>, Action<(Modal enterModal, Modal exitModal)>, Action<(Modal enterModal, Modal exitModal)>)
  nameWithType: ModalContainerExtensions.AddCallbackReceiver(ModalContainer, Action<(Modal enterModal, Modal exitModal)>, Action<(Modal enterModal, Modal exitModal)>, Action<(Modal enterModal, Modal exitModal)>, Action<(Modal enterModal, Modal exitModal)>)
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainerExtensions.AddCallbackReceiver(UnityScreenNavigator.Runtime.Core.Modal.ModalContainer, Action<(UnityScreenNavigator.Runtime.Core.Modal.Modal enterModal, UnityScreenNavigator.Runtime.Core.Modal.Modal exitModal)>, Action<(UnityScreenNavigator.Runtime.Core.Modal.Modal enterModal, UnityScreenNavigator.Runtime.Core.Modal.Modal exitModal)>, Action<(UnityScreenNavigator.Runtime.Core.Modal.Modal enterModal, UnityScreenNavigator.Runtime.Core.Modal.Modal exitModal)>, Action<(UnityScreenNavigator.Runtime.Core.Modal.Modal enterModal, UnityScreenNavigator.Runtime.Core.Modal.Modal exitModal)>)
  type: Method
  source:
    id: AddCallbackReceiver
    path: ''
    startLine: 2265
  assemblies:
  - cs.temp.dll
  namespace: UnityScreenNavigator.Runtime.Core.Modal
  summary: "\nAdd callbacks.\n"
  example: []
  syntax:
    content: public static void AddCallbackReceiver(this ModalContainer self, Action<(Modal enterModal, Modal exitModal)> onBeforePush = null, Action<(Modal enterModal, Modal exitModal)> onAfterPush = null, Action<(Modal enterModal, Modal exitModal)> onBeforePop = null, Action<(Modal enterModal, Modal exitModal)> onAfterPop = null)
    parameters:
    - id: self
      type: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer
      description: ''
    - id: onBeforePush
      type: Global.Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Modal.Modal,UnityScreenNavigator.Runtime.Core.Modal.Modal}}
      description: ''
    - id: onAfterPush
      type: Global.Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Modal.Modal,UnityScreenNavigator.Runtime.Core.Modal.Modal}}
      description: ''
    - id: onBeforePop
      type: Global.Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Modal.Modal,UnityScreenNavigator.Runtime.Core.Modal.Modal}}
      description: ''
    - id: onAfterPop
      type: Global.Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Modal.Modal,UnityScreenNavigator.Runtime.Core.Modal.Modal}}
      description: ''
    content.vb: Public Shared Sub AddCallbackReceiver(self As ModalContainer, onBeforePush As Action(Of (enterModal As Modal, exitModal As Modal)) = Nothing, onAfterPush As Action(Of (enterModal As Modal, exitModal As Modal)) = Nothing, onBeforePop As Action(Of (enterModal As Modal, exitModal As Modal)) = Nothing, onAfterPop As Action(Of (enterModal As Modal, exitModal As Modal)) = Nothing)
  overload: UnityScreenNavigator.Runtime.Core.Modal.ModalContainerExtensions.AddCallbackReceiver*
  nameWithType.vb: ModalContainerExtensions.AddCallbackReceiver(ModalContainer, Action(Of (enterModal As Modal, exitModal As Modal)), Action(Of (enterModal As Modal, exitModal As Modal)), Action(Of (enterModal As Modal, exitModal As Modal)), Action(Of (enterModal As Modal, exitModal As Modal)))
  fullName.vb: UnityScreenNavigator.Runtime.Core.Modal.ModalContainerExtensions.AddCallbackReceiver(UnityScreenNavigator.Runtime.Core.Modal.ModalContainer, Action(Of (enterModal As UnityScreenNavigator.Runtime.Core.Modal.Modal, exitModal As UnityScreenNavigator.Runtime.Core.Modal.Modal)), Action(Of (enterModal As UnityScreenNavigator.Runtime.Core.Modal.Modal, exitModal As UnityScreenNavigator.Runtime.Core.Modal.Modal)), Action(Of (enterModal As UnityScreenNavigator.Runtime.Core.Modal.Modal, exitModal As UnityScreenNavigator.Runtime.Core.Modal.Modal)), Action(Of (enterModal As UnityScreenNavigator.Runtime.Core.Modal.Modal, exitModal As UnityScreenNavigator.Runtime.Core.Modal.Modal)))
  name.vb: AddCallbackReceiver(ModalContainer, Action(Of (enterModal As Modal, exitModal As Modal)), Action(Of (enterModal As Modal, exitModal As Modal)), Action(Of (enterModal As Modal, exitModal As Modal)), Action(Of (enterModal As Modal, exitModal As Modal)))
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainerExtensions.AddCallbackReceiver(UnityScreenNavigator.Runtime.Core.Modal.ModalContainer,UnityScreenNavigator.Runtime.Core.Modal.Modal,Action{UnityScreenNavigator.Runtime.Core.Modal.Modal},Action{UnityScreenNavigator.Runtime.Core.Modal.Modal},Action{UnityScreenNavigator.Runtime.Core.Modal.Modal},Action{UnityScreenNavigator.Runtime.Core.Modal.Modal})
  commentId: M:UnityScreenNavigator.Runtime.Core.Modal.ModalContainerExtensions.AddCallbackReceiver(UnityScreenNavigator.Runtime.Core.Modal.ModalContainer,UnityScreenNavigator.Runtime.Core.Modal.Modal,Action{UnityScreenNavigator.Runtime.Core.Modal.Modal},Action{UnityScreenNavigator.Runtime.Core.Modal.Modal},Action{UnityScreenNavigator.Runtime.Core.Modal.Modal},Action{UnityScreenNavigator.Runtime.Core.Modal.Modal})
  id: AddCallbackReceiver(UnityScreenNavigator.Runtime.Core.Modal.ModalContainer,UnityScreenNavigator.Runtime.Core.Modal.Modal,Action{UnityScreenNavigator.Runtime.Core.Modal.Modal},Action{UnityScreenNavigator.Runtime.Core.Modal.Modal},Action{UnityScreenNavigator.Runtime.Core.Modal.Modal},Action{UnityScreenNavigator.Runtime.Core.Modal.Modal})
  isExtensionMethod: true
  parent: UnityScreenNavigator.Runtime.Core.Modal.ModalContainerExtensions
  langs:
  - csharp
  - vb
  name: AddCallbackReceiver(ModalContainer, Modal, Action<Modal>, Action<Modal>, Action<Modal>, Action<Modal>)
  nameWithType: ModalContainerExtensions.AddCallbackReceiver(ModalContainer, Modal, Action<Modal>, Action<Modal>, Action<Modal>, Action<Modal>)
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainerExtensions.AddCallbackReceiver(UnityScreenNavigator.Runtime.Core.Modal.ModalContainer, UnityScreenNavigator.Runtime.Core.Modal.Modal, Action<UnityScreenNavigator.Runtime.Core.Modal.Modal>, Action<UnityScreenNavigator.Runtime.Core.Modal.Modal>, Action<UnityScreenNavigator.Runtime.Core.Modal.Modal>, Action<UnityScreenNavigator.Runtime.Core.Modal.Modal>)
  type: Method
  source:
    id: AddCallbackReceiver
    path: ''
    startLine: 2285
  assemblies:
  - cs.temp.dll
  namespace: UnityScreenNavigator.Runtime.Core.Modal
  summary: "\nAdd callbacks.\n"
  example: []
  syntax:
    content: public static void AddCallbackReceiver(this ModalContainer self, Modal modal, Action<Modal> onBeforePush = null, Action<Modal> onAfterPush = null, Action<Modal> onBeforePop = null, Action<Modal> onAfterPop = null)
    parameters:
    - id: self
      type: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer
      description: ''
    - id: modal
      type: UnityScreenNavigator.Runtime.Core.Modal.Modal
      description: ''
    - id: onBeforePush
      type: Global.Action{UnityScreenNavigator.Runtime.Core.Modal.Modal}
      description: ''
    - id: onAfterPush
      type: Global.Action{UnityScreenNavigator.Runtime.Core.Modal.Modal}
      description: ''
    - id: onBeforePop
      type: Global.Action{UnityScreenNavigator.Runtime.Core.Modal.Modal}
      description: ''
    - id: onAfterPop
      type: Global.Action{UnityScreenNavigator.Runtime.Core.Modal.Modal}
      description: ''
    content.vb: Public Shared Sub AddCallbackReceiver(self As ModalContainer, modal As Modal, onBeforePush As Action(Of Modal) = Nothing, onAfterPush As Action(Of Modal) = Nothing, onBeforePop As Action(Of Modal) = Nothing, onAfterPop As Action(Of Modal) = Nothing)
  overload: UnityScreenNavigator.Runtime.Core.Modal.ModalContainerExtensions.AddCallbackReceiver*
  nameWithType.vb: ModalContainerExtensions.AddCallbackReceiver(ModalContainer, Modal, Action(Of Modal), Action(Of Modal), Action(Of Modal), Action(Of Modal))
  fullName.vb: UnityScreenNavigator.Runtime.Core.Modal.ModalContainerExtensions.AddCallbackReceiver(UnityScreenNavigator.Runtime.Core.Modal.ModalContainer, UnityScreenNavigator.Runtime.Core.Modal.Modal, Action(Of UnityScreenNavigator.Runtime.Core.Modal.Modal), Action(Of UnityScreenNavigator.Runtime.Core.Modal.Modal), Action(Of UnityScreenNavigator.Runtime.Core.Modal.Modal), Action(Of UnityScreenNavigator.Runtime.Core.Modal.Modal))
  name.vb: AddCallbackReceiver(ModalContainer, Modal, Action(Of Modal), Action(Of Modal), Action(Of Modal), Action(Of Modal))
references:
- uid: UnityScreenNavigator.Runtime.Core.Modal
  commentId: N:UnityScreenNavigator.Runtime.Core.Modal
  name: UnityScreenNavigator.Runtime.Core.Modal
  nameWithType: UnityScreenNavigator.Runtime.Core.Modal
  fullName: UnityScreenNavigator.Runtime.Core.Modal
  spec.csharp:
  - uid: UnityScreenNavigator
    name: UnityScreenNavigator
  - name: .
  - uid: UnityScreenNavigator.Runtime
    name: Runtime
  - name: .
  - uid: UnityScreenNavigator.Runtime.Core
    name: Core
  - name: .
  - uid: UnityScreenNavigator.Runtime.Core.Modal
    name: Modal
  spec.vb:
  - uid: UnityScreenNavigator
    name: UnityScreenNavigator
  - name: .
  - uid: UnityScreenNavigator.Runtime
    name: Runtime
  - name: .
  - uid: UnityScreenNavigator.Runtime.Core
    name: Core
  - name: .
  - uid: UnityScreenNavigator.Runtime.Core.Modal
    name: Modal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainerExtensions.AddCallbackReceiver*
  commentId: Overload:UnityScreenNavigator.Runtime.Core.Modal.ModalContainerExtensions.AddCallbackReceiver
  name: AddCallbackReceiver
  nameWithType: ModalContainerExtensions.AddCallbackReceiver
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainerExtensions.AddCallbackReceiver
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer
  commentId: T:UnityScreenNavigator.Runtime.Core.Modal.ModalContainer
  parent: UnityScreenNavigator.Runtime.Core.Modal
  name: ModalContainer
  nameWithType: ModalContainer
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer
- uid: Global.Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Modal.Modal,UnityScreenNavigator.Runtime.Core.Modal.Modal}}
  commentId: '!:Global.Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Modal.Modal,UnityScreenNavigator.Runtime.Core.Modal.Modal}}'
  definition: Global.Action`1
  name: Action<(Modal enterModal, Modal exitModal)>
  nameWithType: Action<(Modal enterModal, Modal exitModal)>
  fullName: Action<(UnityScreenNavigator.Runtime.Core.Modal.Modal enterModal, UnityScreenNavigator.Runtime.Core.Modal.Modal exitModal)>
  nameWithType.vb: Action(Of (enterModal As Modal, exitModal As Modal))
  fullName.vb: Action(Of (enterModal As UnityScreenNavigator.Runtime.Core.Modal.Modal, exitModal As UnityScreenNavigator.Runtime.Core.Modal.Modal))
  name.vb: Action(Of (enterModal As Modal, exitModal As Modal))
  spec.csharp:
  - uid: Global.Action`1
    name: Action
    isExternal: true
  - name: <
  - name: (
  - uid: UnityScreenNavigator.Runtime.Core.Modal.Modal
    name: Modal
  - name: " "
  - uid: System.ValueTuple{UnityScreenNavigator.Runtime.Core.Modal.Modal,UnityScreenNavigator.Runtime.Core.Modal.Modal}.enterModal
    name: enterModal
  - name: ','
  - name: " "
  - uid: UnityScreenNavigator.Runtime.Core.Modal.Modal
    name: Modal
  - name: " "
  - uid: System.ValueTuple{UnityScreenNavigator.Runtime.Core.Modal.Modal,UnityScreenNavigator.Runtime.Core.Modal.Modal}.exitModal
    name: exitModal
  - name: )
  - name: '>'
  spec.vb:
  - uid: Global.Action`1
    name: Action
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{UnityScreenNavigator.Runtime.Core.Modal.Modal,UnityScreenNavigator.Runtime.Core.Modal.Modal}.enterModal
    name: enterModal
  - name: " "
  - name: As
  - name: " "
  - uid: UnityScreenNavigator.Runtime.Core.Modal.Modal
    name: Modal
  - name: ','
  - name: " "
  - uid: System.ValueTuple{UnityScreenNavigator.Runtime.Core.Modal.Modal,UnityScreenNavigator.Runtime.Core.Modal.Modal}.exitModal
    name: exitModal
  - name: " "
  - name: As
  - name: " "
  - uid: UnityScreenNavigator.Runtime.Core.Modal.Modal
    name: Modal
  - name: )
  - name: )
- uid: Global.Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Global.Action`1
    name: Action
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Global.Action`1
    name: Action
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: UnityScreenNavigator.Runtime.Core.Modal.Modal
  commentId: T:UnityScreenNavigator.Runtime.Core.Modal.Modal
  parent: UnityScreenNavigator.Runtime.Core.Modal
  name: Modal
  nameWithType: Modal
  fullName: UnityScreenNavigator.Runtime.Core.Modal.Modal
- uid: Global.Action{UnityScreenNavigator.Runtime.Core.Modal.Modal}
  commentId: '!:Global.Action{UnityScreenNavigator.Runtime.Core.Modal.Modal}'
  definition: Global.Action`1
  name: Action<Modal>
  nameWithType: Action<Modal>
  fullName: Action<UnityScreenNavigator.Runtime.Core.Modal.Modal>
  nameWithType.vb: Action(Of Modal)
  fullName.vb: Action(Of UnityScreenNavigator.Runtime.Core.Modal.Modal)
  name.vb: Action(Of Modal)
  spec.csharp:
  - uid: Global.Action`1
    name: Action
    isExternal: true
  - name: <
  - uid: UnityScreenNavigator.Runtime.Core.Modal.Modal
    name: Modal
  - name: '>'
  spec.vb:
  - uid: Global.Action`1
    name: Action
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: UnityScreenNavigator.Runtime.Core.Modal.Modal
    name: Modal
  - name: )
