### YamlMime:ManagedReference
items:
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer
  commentId: T:UnityScreenNavigator.Runtime.Core.Modal.ModalContainer
  id: ModalContainer
  parent: UnityScreenNavigator.Runtime.Core.Modal
  children:
  - UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.AddCallbackReceiver(UnityScreenNavigator.Runtime.Core.Modal.IModalContainerCallbackReceiver)
  - UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.AllowMultiple
  - UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Create(System.String,System.Int32,ContainerLayerType)
  - UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Current
  - UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Find(System.String)
  - UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Modals
  - UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Of(RectTransform,System.Boolean)
  - UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Of(Transform,System.Boolean)
  - UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.OnBackButtonPressed
  - UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Pop(System.Boolean)
  - UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Preload(System.String)
  - UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Push(UnityScreenNavigator.Runtime.Core.Shared.WindowOption)
  - UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.ReleasePreloaded(System.String)
  - UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.RemoveCallbackReceiver(UnityScreenNavigator.Runtime.Core.Modal.IModalContainerCallbackReceiver)
  - UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.VisibleElementInLayer
  langs:
  - csharp
  - vb
  name: ModalContainer
  nameWithType: ModalContainer
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer
  type: Class
  source:
    id: ModalContainer
    path: ''
    startLine: 1831
  assemblies:
  - cs.temp.dll
  namespace: UnityScreenNavigator.Runtime.Core.Modal
  syntax:
    content: 'public sealed class ModalContainer : ContainerLayer, IContainerManager<Modal>'
    content.vb: Public NotInheritable Class ModalContainer Inherits ContainerLayer Implements IContainerManager(Of Modal)
  inheritance:
  - System.Object
  implements:
  - Global.IContainerManager{UnityScreenNavigator.Runtime.Core.Modal.Modal}
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Modals
  commentId: P:UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Modals
  id: Modals
  parent: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer
  langs:
  - csharp
  - vb
  name: Modals
  nameWithType: ModalContainer.Modals
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Modals
  type: Property
  source:
    id: Modals
    path: ''
    startLine: 1863
  assemblies:
  - cs.temp.dll
  namespace: UnityScreenNavigator.Runtime.Core.Modal
  summary: "\nStacked modals.\n"
  example: []
  syntax:
    content: public IReadOnlyList<Modal> Modals { get; }
    parameters: []
    return:
      type: Global.IReadOnlyList{UnityScreenNavigator.Runtime.Core.Modal.Modal}
    content.vb: Public ReadOnly Property Modals As IReadOnlyList(Of Modal)
  overload: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Modals*
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Current
  commentId: P:UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Current
  id: Current
  parent: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer
  langs:
  - csharp
  - vb
  name: Current
  nameWithType: ModalContainer.Current
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Current
  type: Property
  source:
    id: Current
    path: ''
    startLine: 1865
  assemblies:
  - cs.temp.dll
  namespace: UnityScreenNavigator.Runtime.Core.Modal
  syntax:
    content: public override Window Current { get; }
    parameters: []
    return:
      type: Global.Window
    content.vb: Public Overrides ReadOnly Property Current As Window
  overload: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Current*
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.VisibleElementInLayer
  commentId: P:UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.VisibleElementInLayer
  id: VisibleElementInLayer
  parent: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer
  langs:
  - csharp
  - vb
  name: VisibleElementInLayer
  nameWithType: ModalContainer.VisibleElementInLayer
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.VisibleElementInLayer
  type: Property
  source:
    id: VisibleElementInLayer
    path: ''
    startLine: 1867
  assemblies:
  - cs.temp.dll
  namespace: UnityScreenNavigator.Runtime.Core.Modal
  syntax:
    content: public override int VisibleElementInLayer { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property VisibleElementInLayer As Integer
  overload: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.VisibleElementInLayer*
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.AllowMultiple
  commentId: P:UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.AllowMultiple
  id: AllowMultiple
  parent: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer
  langs:
  - csharp
  - vb
  name: AllowMultiple
  nameWithType: ModalContainer.AllowMultiple
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.AllowMultiple
  type: Property
  source:
    id: AllowMultiple
    path: ''
    startLine: 1874
  assemblies:
  - cs.temp.dll
  namespace: UnityScreenNavigator.Runtime.Core.Modal
  summary: "\nAllow multiple modals can be stacked in this container. If set to false, the container will close the current modal before opening the new one.\n"
  example: []
  syntax:
    content: public bool AllowMultiple { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property AllowMultiple As Boolean
  overload: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.AllowMultiple*
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Of(Transform,System.Boolean)
  commentId: M:UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Of(Transform,System.Boolean)
  id: Of(Transform,System.Boolean)
  parent: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer
  langs:
  - csharp
  - vb
  name: Of(Transform, bool)
  nameWithType: ModalContainer.Of(Transform, bool)
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Of(Transform, bool)
  type: Method
  source:
    id: Of
    path: ''
    startLine: 1915
  assemblies:
  - cs.temp.dll
  namespace: UnityScreenNavigator.Runtime.Core.Modal
  summary: "\nGet the <xref href=\"UnityScreenNavigator.Runtime.Core.Modal.ModalContainer\" data-throw-if-not-resolved=\"false\"></xref> that manages the modal to which <see cref=\"!:transform\"></see> belongs.\n"
  example: []
  syntax:
    content: public static ModalContainer Of(Transform transform, bool useCache = true)
    parameters:
    - id: transform
      type: Global.Transform
      description: ''
    - id: useCache
      type: System.Boolean
      description: Use the previous result for the <see cref="!:transform"></see>.
    return:
      type: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer
      description: ''
    content.vb: Public Shared Function [Of](transform As Transform, useCache As Boolean = True) As ModalContainer
  overload: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Of*
  nameWithType.vb: ModalContainer.Of(Transform, Boolean)
  fullName.vb: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Of(Transform, Boolean)
  name.vb: Of(Transform, Boolean)
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Of(RectTransform,System.Boolean)
  commentId: M:UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Of(RectTransform,System.Boolean)
  id: Of(RectTransform,System.Boolean)
  parent: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer
  langs:
  - csharp
  - vb
  name: Of(RectTransform, bool)
  nameWithType: ModalContainer.Of(RectTransform, bool)
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Of(RectTransform, bool)
  type: Method
  source:
    id: Of
    path: ''
    startLine: 1926
  assemblies:
  - cs.temp.dll
  namespace: UnityScreenNavigator.Runtime.Core.Modal
  summary: "\nGet the <xref href=\"UnityScreenNavigator.Runtime.Core.Modal.ModalContainer\" data-throw-if-not-resolved=\"false\"></xref> that manages the modal to which <see cref=\"!:rectTransform\"></see> belongs.\n"
  example: []
  syntax:
    content: public static ModalContainer Of(RectTransform rectTransform, bool useCache = true)
    parameters:
    - id: rectTransform
      type: Global.RectTransform
      description: ''
    - id: useCache
      type: System.Boolean
      description: Use the previous result for the <see cref="!:rectTransform"></see>.
    return:
      type: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer
      description: ''
    content.vb: Public Shared Function [Of](rectTransform As RectTransform, useCache As Boolean = True) As ModalContainer
  overload: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Of*
  nameWithType.vb: ModalContainer.Of(RectTransform, Boolean)
  fullName.vb: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Of(RectTransform, Boolean)
  name.vb: Of(RectTransform, Boolean)
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Find(System.String)
  commentId: M:UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Find(System.String)
  id: Find(System.String)
  parent: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer
  langs:
  - csharp
  - vb
  name: Find(string)
  nameWithType: ModalContainer.Find(string)
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Find(string)
  type: Method
  source:
    id: Find
    path: ''
    startLine: 1949
  assemblies:
  - cs.temp.dll
  namespace: UnityScreenNavigator.Runtime.Core.Modal
  summary: "\nFind the <xref href=\"UnityScreenNavigator.Runtime.Core.Modal.ModalContainer\" data-throw-if-not-resolved=\"false\"></xref> of <see cref=\"!:containerName\"></see>.\n"
  example: []
  syntax:
    content: public static ModalContainer Find(string containerName)
    parameters:
    - id: containerName
      type: System.String
      description: ''
    return:
      type: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer
      description: ''
    content.vb: Public Shared Function Find(containerName As String) As ModalContainer
  overload: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Find*
  nameWithType.vb: ModalContainer.Find(String)
  fullName.vb: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Find(String)
  name.vb: Find(String)
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Create(System.String,System.Int32,ContainerLayerType)
  commentId: M:UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Create(System.String,System.Int32,ContainerLayerType)
  id: Create(System.String,System.Int32,ContainerLayerType)
  parent: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer
  langs:
  - csharp
  - vb
  name: Create(string, int, ContainerLayerType)
  nameWithType: ModalContainer.Create(string, int, ContainerLayerType)
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Create(string, int, ContainerLayerType)
  type: Method
  source:
    id: Create
    path: ''
    startLine: 1966
  assemblies:
  - cs.temp.dll
  namespace: UnityScreenNavigator.Runtime.Core.Modal
  summary: "\nCreate a new <xref href=\"UnityScreenNavigator.Runtime.Core.Modal.ModalContainer\" data-throw-if-not-resolved=\"false\"></xref> as a layer\n"
  example: []
  syntax:
    content: public static ModalContainer Create(string layerName, int layer, ContainerLayerType layerType)
    parameters:
    - id: layerName
      type: System.String
      description: ''
    - id: layer
      type: System.Int32
      description: ''
    - id: layerType
      type: Global.ContainerLayerType
      description: ''
    return:
      type: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer
      description: ''
    content.vb: Public Shared Function Create(layerName As String, layer As Integer, layerType As ContainerLayerType) As ModalContainer
  overload: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Create*
  nameWithType.vb: ModalContainer.Create(String, Integer, ContainerLayerType)
  fullName.vb: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Create(String, Integer, ContainerLayerType)
  name.vb: Create(String, Integer, ContainerLayerType)
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.AddCallbackReceiver(UnityScreenNavigator.Runtime.Core.Modal.IModalContainerCallbackReceiver)
  commentId: M:UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.AddCallbackReceiver(UnityScreenNavigator.Runtime.Core.Modal.IModalContainerCallbackReceiver)
  id: AddCallbackReceiver(UnityScreenNavigator.Runtime.Core.Modal.IModalContainerCallbackReceiver)
  parent: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer
  langs:
  - csharp
  - vb
  name: AddCallbackReceiver(IModalContainerCallbackReceiver)
  nameWithType: ModalContainer.AddCallbackReceiver(IModalContainerCallbackReceiver)
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.AddCallbackReceiver(UnityScreenNavigator.Runtime.Core.Modal.IModalContainerCallbackReceiver)
  type: Method
  source:
    id: AddCallbackReceiver
    path: ''
    startLine: 2005
  assemblies:
  - cs.temp.dll
  namespace: UnityScreenNavigator.Runtime.Core.Modal
  summary: "\nAdd a callback receiver.\n"
  example: []
  syntax:
    content: public void AddCallbackReceiver(IModalContainerCallbackReceiver callbackReceiver)
    parameters:
    - id: callbackReceiver
      type: UnityScreenNavigator.Runtime.Core.Modal.IModalContainerCallbackReceiver
      description: ''
    content.vb: Public Sub AddCallbackReceiver(callbackReceiver As IModalContainerCallbackReceiver)
  overload: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.AddCallbackReceiver*
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.RemoveCallbackReceiver(UnityScreenNavigator.Runtime.Core.Modal.IModalContainerCallbackReceiver)
  commentId: M:UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.RemoveCallbackReceiver(UnityScreenNavigator.Runtime.Core.Modal.IModalContainerCallbackReceiver)
  id: RemoveCallbackReceiver(UnityScreenNavigator.Runtime.Core.Modal.IModalContainerCallbackReceiver)
  parent: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer
  langs:
  - csharp
  - vb
  name: RemoveCallbackReceiver(IModalContainerCallbackReceiver)
  nameWithType: ModalContainer.RemoveCallbackReceiver(IModalContainerCallbackReceiver)
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.RemoveCallbackReceiver(UnityScreenNavigator.Runtime.Core.Modal.IModalContainerCallbackReceiver)
  type: Method
  source:
    id: RemoveCallbackReceiver
    path: ''
    startLine: 2014
  assemblies:
  - cs.temp.dll
  namespace: UnityScreenNavigator.Runtime.Core.Modal
  summary: "\nRemove a callback receiver.\n"
  example: []
  syntax:
    content: public void RemoveCallbackReceiver(IModalContainerCallbackReceiver callbackReceiver)
    parameters:
    - id: callbackReceiver
      type: UnityScreenNavigator.Runtime.Core.Modal.IModalContainerCallbackReceiver
      description: ''
    content.vb: Public Sub RemoveCallbackReceiver(callbackReceiver As IModalContainerCallbackReceiver)
  overload: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.RemoveCallbackReceiver*
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Push(UnityScreenNavigator.Runtime.Core.Shared.WindowOption)
  commentId: M:UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Push(UnityScreenNavigator.Runtime.Core.Shared.WindowOption)
  id: Push(UnityScreenNavigator.Runtime.Core.Shared.WindowOption)
  parent: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer
  langs:
  - csharp
  - vb
  name: Push(WindowOption)
  nameWithType: ModalContainer.Push(WindowOption)
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Push(UnityScreenNavigator.Runtime.Core.Shared.WindowOption)
  type: Method
  source:
    id: Push
    path: ''
    startLine: 2024
  assemblies:
  - cs.temp.dll
  namespace: UnityScreenNavigator.Runtime.Core.Modal
  summary: "\nPush new modal.\n"
  example: []
  syntax:
    content: public UniTask<Modal> Push(WindowOption option)
    parameters:
    - id: option
      type: UnityScreenNavigator.Runtime.Core.Shared.WindowOption
      description: ''
    return:
      type: Global.UniTask{UnityScreenNavigator.Runtime.Core.Modal.Modal}
      description: ''
    content.vb: Public Function Push([option] As WindowOption) As UniTask(Of Modal)
  overload: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Push*
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Pop(System.Boolean)
  commentId: M:UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Pop(System.Boolean)
  id: Pop(System.Boolean)
  parent: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer
  langs:
  - csharp
  - vb
  name: Pop(bool)
  nameWithType: ModalContainer.Pop(bool)
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Pop(bool)
  type: Method
  source:
    id: Pop
    path: ''
    startLine: 2034
  assemblies:
  - cs.temp.dll
  namespace: UnityScreenNavigator.Runtime.Core.Modal
  summary: "\nPop current modal.\n"
  example: []
  syntax:
    content: public UniTask Pop(bool playAnimation)
    parameters:
    - id: playAnimation
      type: System.Boolean
      description: ''
    return:
      type: Global.UniTask
      description: ''
    content.vb: Public Function Pop(playAnimation As Boolean) As UniTask
  overload: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Pop*
  nameWithType.vb: ModalContainer.Pop(Boolean)
  fullName.vb: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Pop(Boolean)
  name.vb: Pop(Boolean)
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Preload(System.String)
  commentId: M:UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Preload(System.String)
  id: Preload(System.String)
  parent: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer
  langs:
  - csharp
  - vb
  name: Preload(string)
  nameWithType: ModalContainer.Preload(string)
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Preload(string)
  type: Method
  source:
    id: Preload
    path: ''
    startLine: 2208
  assemblies:
  - cs.temp.dll
  namespace: UnityScreenNavigator.Runtime.Core.Modal
  syntax:
    content: public UniTask Preload(string resourceKey)
    parameters:
    - id: resourceKey
      type: System.String
    return:
      type: Global.UniTask
    content.vb: Public Function Preload(resourceKey As String) As UniTask
  overload: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Preload*
  nameWithType.vb: ModalContainer.Preload(String)
  fullName.vb: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Preload(String)
  name.vb: Preload(String)
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.ReleasePreloaded(System.String)
  commentId: M:UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.ReleasePreloaded(System.String)
  id: ReleasePreloaded(System.String)
  parent: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer
  langs:
  - csharp
  - vb
  name: ReleasePreloaded(string)
  nameWithType: ModalContainer.ReleasePreloaded(string)
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.ReleasePreloaded(string)
  type: Method
  source:
    id: ReleasePreloaded
    path: ''
    startLine: 2219
  assemblies:
  - cs.temp.dll
  namespace: UnityScreenNavigator.Runtime.Core.Modal
  syntax:
    content: public void ReleasePreloaded(string resourceKey)
    parameters:
    - id: resourceKey
      type: System.String
    content.vb: Public Sub ReleasePreloaded(resourceKey As String)
  overload: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.ReleasePreloaded*
  nameWithType.vb: ModalContainer.ReleasePreloaded(String)
  fullName.vb: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.ReleasePreloaded(String)
  name.vb: ReleasePreloaded(String)
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.OnBackButtonPressed
  commentId: M:UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.OnBackButtonPressed
  id: OnBackButtonPressed
  parent: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer
  langs:
  - csharp
  - vb
  name: OnBackButtonPressed()
  nameWithType: ModalContainer.OnBackButtonPressed()
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.OnBackButtonPressed()
  type: Method
  source:
    id: OnBackButtonPressed
    path: ''
    startLine: 2225
  assemblies:
  - cs.temp.dll
  namespace: UnityScreenNavigator.Runtime.Core.Modal
  syntax:
    content: public override UniTask OnBackButtonPressed()
    return:
      type: Global.UniTask
    content.vb: Public Overrides Function OnBackButtonPressed() As UniTask
  overload: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.OnBackButtonPressed*
references:
- uid: UnityScreenNavigator.Runtime.Core.Modal
  commentId: N:UnityScreenNavigator.Runtime.Core.Modal
  name: UnityScreenNavigator.Runtime.Core.Modal
  nameWithType: UnityScreenNavigator.Runtime.Core.Modal
  fullName: UnityScreenNavigator.Runtime.Core.Modal
  spec.csharp:
  - uid: UnityScreenNavigator
    name: UnityScreenNavigator
  - name: .
  - uid: UnityScreenNavigator.Runtime
    name: Runtime
  - name: .
  - uid: UnityScreenNavigator.Runtime.Core
    name: Core
  - name: .
  - uid: UnityScreenNavigator.Runtime.Core.Modal
    name: Modal
  spec.vb:
  - uid: UnityScreenNavigator
    name: UnityScreenNavigator
  - name: .
  - uid: UnityScreenNavigator.Runtime
    name: Runtime
  - name: .
  - uid: UnityScreenNavigator.Runtime.Core
    name: Core
  - name: .
  - uid: UnityScreenNavigator.Runtime.Core.Modal
    name: Modal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.IContainerManager{UnityScreenNavigator.Runtime.Core.Modal.Modal}
  commentId: '!:Global.IContainerManager{UnityScreenNavigator.Runtime.Core.Modal.Modal}'
  definition: Global.IContainerManager`1
  name: IContainerManager<Modal>
  nameWithType: IContainerManager<Modal>
  fullName: IContainerManager<UnityScreenNavigator.Runtime.Core.Modal.Modal>
  nameWithType.vb: IContainerManager(Of Modal)
  fullName.vb: IContainerManager(Of UnityScreenNavigator.Runtime.Core.Modal.Modal)
  name.vb: IContainerManager(Of Modal)
  spec.csharp:
  - uid: Global.IContainerManager`1
    name: IContainerManager
    isExternal: true
  - name: <
  - uid: UnityScreenNavigator.Runtime.Core.Modal.Modal
    name: Modal
  - name: '>'
  spec.vb:
  - uid: Global.IContainerManager`1
    name: IContainerManager
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: UnityScreenNavigator.Runtime.Core.Modal.Modal
    name: Modal
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.IContainerManager`1
  isExternal: true
  name: IContainerManager<>
  nameWithType: IContainerManager<>
  fullName: IContainerManager<>
  nameWithType.vb: IContainerManager(Of )
  fullName.vb: IContainerManager(Of )
  name.vb: IContainerManager(Of )
  spec.csharp:
  - uid: Global.IContainerManager`1
    name: IContainerManager
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Global.IContainerManager`1
    name: IContainerManager
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Modals*
  commentId: Overload:UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Modals
  name: Modals
  nameWithType: ModalContainer.Modals
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Modals
- uid: Global.IReadOnlyList{UnityScreenNavigator.Runtime.Core.Modal.Modal}
  commentId: '!:Global.IReadOnlyList{UnityScreenNavigator.Runtime.Core.Modal.Modal}'
  definition: Global.IReadOnlyList`1
  name: IReadOnlyList<Modal>
  nameWithType: IReadOnlyList<Modal>
  fullName: IReadOnlyList<UnityScreenNavigator.Runtime.Core.Modal.Modal>
  nameWithType.vb: IReadOnlyList(Of Modal)
  fullName.vb: IReadOnlyList(Of UnityScreenNavigator.Runtime.Core.Modal.Modal)
  name.vb: IReadOnlyList(Of Modal)
  spec.csharp:
  - uid: Global.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
  - name: <
  - uid: UnityScreenNavigator.Runtime.Core.Modal.Modal
    name: Modal
  - name: '>'
  spec.vb:
  - uid: Global.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: UnityScreenNavigator.Runtime.Core.Modal.Modal
    name: Modal
  - name: )
- uid: Global.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<>
  nameWithType: IReadOnlyList<>
  fullName: IReadOnlyList<>
  nameWithType.vb: IReadOnlyList(Of )
  fullName.vb: IReadOnlyList(Of )
  name.vb: IReadOnlyList(Of )
  spec.csharp:
  - uid: Global.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Global.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Current*
  commentId: Overload:UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Current
  name: Current
  nameWithType: ModalContainer.Current
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Current
- uid: Global.Window
  isExternal: true
  name: Window
  nameWithType: Window
  fullName: Window
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.VisibleElementInLayer*
  commentId: Overload:UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.VisibleElementInLayer
  name: VisibleElementInLayer
  nameWithType: ModalContainer.VisibleElementInLayer
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.VisibleElementInLayer
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.AllowMultiple*
  commentId: Overload:UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.AllowMultiple
  name: AllowMultiple
  nameWithType: ModalContainer.AllowMultiple
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.AllowMultiple
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer
  commentId: T:UnityScreenNavigator.Runtime.Core.Modal.ModalContainer
  parent: UnityScreenNavigator.Runtime.Core.Modal
  name: ModalContainer
  nameWithType: ModalContainer
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Of*
  commentId: Overload:UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Of
  name: Of
  nameWithType: ModalContainer.Of
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Of
- uid: Global.Transform
  isExternal: true
  name: Transform
  nameWithType: Transform
  fullName: Transform
- uid: Global.RectTransform
  isExternal: true
  name: RectTransform
  nameWithType: RectTransform
  fullName: RectTransform
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Find*
  commentId: Overload:UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Find
  name: Find
  nameWithType: ModalContainer.Find
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Find
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Create*
  commentId: Overload:UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Create
  name: Create
  nameWithType: ModalContainer.Create
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Create
- uid: Global.ContainerLayerType
  isExternal: true
  name: ContainerLayerType
  nameWithType: ContainerLayerType
  fullName: ContainerLayerType
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.AddCallbackReceiver*
  commentId: Overload:UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.AddCallbackReceiver
  name: AddCallbackReceiver
  nameWithType: ModalContainer.AddCallbackReceiver
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.AddCallbackReceiver
- uid: UnityScreenNavigator.Runtime.Core.Modal.IModalContainerCallbackReceiver
  commentId: T:UnityScreenNavigator.Runtime.Core.Modal.IModalContainerCallbackReceiver
  parent: UnityScreenNavigator.Runtime.Core.Modal
  name: IModalContainerCallbackReceiver
  nameWithType: IModalContainerCallbackReceiver
  fullName: UnityScreenNavigator.Runtime.Core.Modal.IModalContainerCallbackReceiver
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.RemoveCallbackReceiver*
  commentId: Overload:UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.RemoveCallbackReceiver
  name: RemoveCallbackReceiver
  nameWithType: ModalContainer.RemoveCallbackReceiver
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.RemoveCallbackReceiver
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Push*
  commentId: Overload:UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Push
  name: Push
  nameWithType: ModalContainer.Push
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Push
- uid: UnityScreenNavigator.Runtime.Core.Shared.WindowOption
  commentId: T:UnityScreenNavigator.Runtime.Core.Shared.WindowOption
  parent: UnityScreenNavigator.Runtime.Core.Shared
  name: WindowOption
  nameWithType: WindowOption
  fullName: UnityScreenNavigator.Runtime.Core.Shared.WindowOption
- uid: Global.UniTask{UnityScreenNavigator.Runtime.Core.Modal.Modal}
  commentId: '!:Global.UniTask{UnityScreenNavigator.Runtime.Core.Modal.Modal}'
  definition: Global.UniTask`1
  name: UniTask<Modal>
  nameWithType: UniTask<Modal>
  fullName: UniTask<UnityScreenNavigator.Runtime.Core.Modal.Modal>
  nameWithType.vb: UniTask(Of Modal)
  fullName.vb: UniTask(Of UnityScreenNavigator.Runtime.Core.Modal.Modal)
  name.vb: UniTask(Of Modal)
  spec.csharp:
  - uid: Global.UniTask`1
    name: UniTask
    isExternal: true
  - name: <
  - uid: UnityScreenNavigator.Runtime.Core.Modal.Modal
    name: Modal
  - name: '>'
  spec.vb:
  - uid: Global.UniTask`1
    name: UniTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: UnityScreenNavigator.Runtime.Core.Modal.Modal
    name: Modal
  - name: )
- uid: UnityScreenNavigator.Runtime.Core.Shared
  commentId: N:UnityScreenNavigator.Runtime.Core.Shared
  name: UnityScreenNavigator.Runtime.Core.Shared
  nameWithType: UnityScreenNavigator.Runtime.Core.Shared
  fullName: UnityScreenNavigator.Runtime.Core.Shared
  spec.csharp:
  - uid: UnityScreenNavigator
    name: UnityScreenNavigator
  - name: .
  - uid: UnityScreenNavigator.Runtime
    name: Runtime
  - name: .
  - uid: UnityScreenNavigator.Runtime.Core
    name: Core
  - name: .
  - uid: UnityScreenNavigator.Runtime.Core.Shared
    name: Shared
  spec.vb:
  - uid: UnityScreenNavigator
    name: UnityScreenNavigator
  - name: .
  - uid: UnityScreenNavigator.Runtime
    name: Runtime
  - name: .
  - uid: UnityScreenNavigator.Runtime.Core
    name: Core
  - name: .
  - uid: UnityScreenNavigator.Runtime.Core.Shared
    name: Shared
- uid: Global.UniTask`1
  isExternal: true
  name: UniTask<>
  nameWithType: UniTask<>
  fullName: UniTask<>
  nameWithType.vb: UniTask(Of )
  fullName.vb: UniTask(Of )
  name.vb: UniTask(Of )
  spec.csharp:
  - uid: Global.UniTask`1
    name: UniTask
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Global.UniTask`1
    name: UniTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Pop*
  commentId: Overload:UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Pop
  name: Pop
  nameWithType: ModalContainer.Pop
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Pop
- uid: Global.UniTask
  isExternal: true
  name: UniTask
  nameWithType: UniTask
  fullName: UniTask
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Preload*
  commentId: Overload:UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Preload
  name: Preload
  nameWithType: ModalContainer.Preload
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.Preload
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.ReleasePreloaded*
  commentId: Overload:UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.ReleasePreloaded
  name: ReleasePreloaded
  nameWithType: ModalContainer.ReleasePreloaded
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.ReleasePreloaded
- uid: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.OnBackButtonPressed*
  commentId: Overload:UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.OnBackButtonPressed
  name: OnBackButtonPressed
  nameWithType: ModalContainer.OnBackButtonPressed
  fullName: UnityScreenNavigator.Runtime.Core.Modal.ModalContainer.OnBackButtonPressed
