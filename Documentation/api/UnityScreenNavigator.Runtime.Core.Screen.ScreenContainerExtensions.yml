### YamlMime:ManagedReference
items:
- uid: UnityScreenNavigator.Runtime.Core.Screen.ScreenContainerExtensions
  commentId: T:UnityScreenNavigator.Runtime.Core.Screen.ScreenContainerExtensions
  id: ScreenContainerExtensions
  parent: UnityScreenNavigator.Runtime.Core.Screen
  children:
  - UnityScreenNavigator.Runtime.Core.Screen.ScreenContainerExtensions.AddCallbackReceiver(UnityScreenNavigator.Runtime.Core.Screen.ScreenContainer,Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Screen.Screen,UnityScreenNavigator.Runtime.Core.Screen.Screen}},Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Screen.Screen,UnityScreenNavigator.Runtime.Core.Screen.Screen}},Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Screen.Screen,UnityScreenNavigator.Runtime.Core.Screen.Screen}},Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Screen.Screen,UnityScreenNavigator.Runtime.Core.Screen.Screen}})
  - UnityScreenNavigator.Runtime.Core.Screen.ScreenContainerExtensions.AddCallbackReceiver(UnityScreenNavigator.Runtime.Core.Screen.ScreenContainer,UnityScreenNavigator.Runtime.Core.Screen.Screen,Action{UnityScreenNavigator.Runtime.Core.Screen.Screen},Action{UnityScreenNavigator.Runtime.Core.Screen.Screen},Action{UnityScreenNavigator.Runtime.Core.Screen.Screen},Action{UnityScreenNavigator.Runtime.Core.Screen.Screen})
  langs:
  - csharp
  - vb
  name: ScreenContainerExtensions
  nameWithType: ScreenContainerExtensions
  fullName: UnityScreenNavigator.Runtime.Core.Screen.ScreenContainerExtensions
  type: Class
  source:
    id: ScreenContainerExtensions
    path: ''
    startLine: 3205
  assemblies:
  - cs.temp.dll
  namespace: UnityScreenNavigator.Runtime.Core.Screen
  syntax:
    content: public static class ScreenContainerExtensions
    content.vb: Public Module ScreenContainerExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: UnityScreenNavigator.Runtime.Core.Screen.ScreenContainerExtensions.AddCallbackReceiver(UnityScreenNavigator.Runtime.Core.Screen.ScreenContainer,Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Screen.Screen,UnityScreenNavigator.Runtime.Core.Screen.Screen}},Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Screen.Screen,UnityScreenNavigator.Runtime.Core.Screen.Screen}},Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Screen.Screen,UnityScreenNavigator.Runtime.Core.Screen.Screen}},Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Screen.Screen,UnityScreenNavigator.Runtime.Core.Screen.Screen}})
  commentId: M:UnityScreenNavigator.Runtime.Core.Screen.ScreenContainerExtensions.AddCallbackReceiver(UnityScreenNavigator.Runtime.Core.Screen.ScreenContainer,Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Screen.Screen,UnityScreenNavigator.Runtime.Core.Screen.Screen}},Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Screen.Screen,UnityScreenNavigator.Runtime.Core.Screen.Screen}},Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Screen.Screen,UnityScreenNavigator.Runtime.Core.Screen.Screen}},Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Screen.Screen,UnityScreenNavigator.Runtime.Core.Screen.Screen}})
  id: AddCallbackReceiver(UnityScreenNavigator.Runtime.Core.Screen.ScreenContainer,Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Screen.Screen,UnityScreenNavigator.Runtime.Core.Screen.Screen}},Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Screen.Screen,UnityScreenNavigator.Runtime.Core.Screen.Screen}},Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Screen.Screen,UnityScreenNavigator.Runtime.Core.Screen.Screen}},Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Screen.Screen,UnityScreenNavigator.Runtime.Core.Screen.Screen}})
  isExtensionMethod: true
  parent: UnityScreenNavigator.Runtime.Core.Screen.ScreenContainerExtensions
  langs:
  - csharp
  - vb
  name: AddCallbackReceiver(ScreenContainer, Action<(Screen enterScreen, Screen exitScreen)>, Action<(Screen enterScreen, Screen exitScreen)>, Action<(Screen enterScreen, Screen exitScreen)>, Action<(Screen enterScreen, Screen exitScreen)>)
  nameWithType: ScreenContainerExtensions.AddCallbackReceiver(ScreenContainer, Action<(Screen enterScreen, Screen exitScreen)>, Action<(Screen enterScreen, Screen exitScreen)>, Action<(Screen enterScreen, Screen exitScreen)>, Action<(Screen enterScreen, Screen exitScreen)>)
  fullName: UnityScreenNavigator.Runtime.Core.Screen.ScreenContainerExtensions.AddCallbackReceiver(UnityScreenNavigator.Runtime.Core.Screen.ScreenContainer, Action<(UnityScreenNavigator.Runtime.Core.Screen.Screen enterScreen, UnityScreenNavigator.Runtime.Core.Screen.Screen exitScreen)>, Action<(UnityScreenNavigator.Runtime.Core.Screen.Screen enterScreen, UnityScreenNavigator.Runtime.Core.Screen.Screen exitScreen)>, Action<(UnityScreenNavigator.Runtime.Core.Screen.Screen enterScreen, UnityScreenNavigator.Runtime.Core.Screen.Screen exitScreen)>, Action<(UnityScreenNavigator.Runtime.Core.Screen.Screen enterScreen, UnityScreenNavigator.Runtime.Core.Screen.Screen exitScreen)>)
  type: Method
  source:
    id: AddCallbackReceiver
    path: ''
    startLine: 3215
  assemblies:
  - cs.temp.dll
  namespace: UnityScreenNavigator.Runtime.Core.Screen
  summary: "\nAdd callbacks.\n"
  example: []
  syntax:
    content: public static void AddCallbackReceiver(this ScreenContainer self, Action<(Screen enterScreen, Screen exitScreen)> onBeforePush = null, Action<(Screen enterScreen, Screen exitScreen)> onAfterPush = null, Action<(Screen enterScreen, Screen exitScreen)> onBeforePop = null, Action<(Screen enterScreen, Screen exitScreen)> onAfterPop = null)
    parameters:
    - id: self
      type: UnityScreenNavigator.Runtime.Core.Screen.ScreenContainer
      description: ''
    - id: onBeforePush
      type: Global.Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Screen.Screen,UnityScreenNavigator.Runtime.Core.Screen.Screen}}
      description: ''
    - id: onAfterPush
      type: Global.Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Screen.Screen,UnityScreenNavigator.Runtime.Core.Screen.Screen}}
      description: ''
    - id: onBeforePop
      type: Global.Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Screen.Screen,UnityScreenNavigator.Runtime.Core.Screen.Screen}}
      description: ''
    - id: onAfterPop
      type: Global.Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Screen.Screen,UnityScreenNavigator.Runtime.Core.Screen.Screen}}
      description: ''
    content.vb: Public Shared Sub AddCallbackReceiver(self As ScreenContainer, onBeforePush As Action(Of (enterScreen As Screen, exitScreen As Screen)) = Nothing, onAfterPush As Action(Of (enterScreen As Screen, exitScreen As Screen)) = Nothing, onBeforePop As Action(Of (enterScreen As Screen, exitScreen As Screen)) = Nothing, onAfterPop As Action(Of (enterScreen As Screen, exitScreen As Screen)) = Nothing)
  overload: UnityScreenNavigator.Runtime.Core.Screen.ScreenContainerExtensions.AddCallbackReceiver*
  nameWithType.vb: ScreenContainerExtensions.AddCallbackReceiver(ScreenContainer, Action(Of (enterScreen As Screen, exitScreen As Screen)), Action(Of (enterScreen As Screen, exitScreen As Screen)), Action(Of (enterScreen As Screen, exitScreen As Screen)), Action(Of (enterScreen As Screen, exitScreen As Screen)))
  fullName.vb: UnityScreenNavigator.Runtime.Core.Screen.ScreenContainerExtensions.AddCallbackReceiver(UnityScreenNavigator.Runtime.Core.Screen.ScreenContainer, Action(Of (enterScreen As UnityScreenNavigator.Runtime.Core.Screen.Screen, exitScreen As UnityScreenNavigator.Runtime.Core.Screen.Screen)), Action(Of (enterScreen As UnityScreenNavigator.Runtime.Core.Screen.Screen, exitScreen As UnityScreenNavigator.Runtime.Core.Screen.Screen)), Action(Of (enterScreen As UnityScreenNavigator.Runtime.Core.Screen.Screen, exitScreen As UnityScreenNavigator.Runtime.Core.Screen.Screen)), Action(Of (enterScreen As UnityScreenNavigator.Runtime.Core.Screen.Screen, exitScreen As UnityScreenNavigator.Runtime.Core.Screen.Screen)))
  name.vb: AddCallbackReceiver(ScreenContainer, Action(Of (enterScreen As Screen, exitScreen As Screen)), Action(Of (enterScreen As Screen, exitScreen As Screen)), Action(Of (enterScreen As Screen, exitScreen As Screen)), Action(Of (enterScreen As Screen, exitScreen As Screen)))
- uid: UnityScreenNavigator.Runtime.Core.Screen.ScreenContainerExtensions.AddCallbackReceiver(UnityScreenNavigator.Runtime.Core.Screen.ScreenContainer,UnityScreenNavigator.Runtime.Core.Screen.Screen,Action{UnityScreenNavigator.Runtime.Core.Screen.Screen},Action{UnityScreenNavigator.Runtime.Core.Screen.Screen},Action{UnityScreenNavigator.Runtime.Core.Screen.Screen},Action{UnityScreenNavigator.Runtime.Core.Screen.Screen})
  commentId: M:UnityScreenNavigator.Runtime.Core.Screen.ScreenContainerExtensions.AddCallbackReceiver(UnityScreenNavigator.Runtime.Core.Screen.ScreenContainer,UnityScreenNavigator.Runtime.Core.Screen.Screen,Action{UnityScreenNavigator.Runtime.Core.Screen.Screen},Action{UnityScreenNavigator.Runtime.Core.Screen.Screen},Action{UnityScreenNavigator.Runtime.Core.Screen.Screen},Action{UnityScreenNavigator.Runtime.Core.Screen.Screen})
  id: AddCallbackReceiver(UnityScreenNavigator.Runtime.Core.Screen.ScreenContainer,UnityScreenNavigator.Runtime.Core.Screen.Screen,Action{UnityScreenNavigator.Runtime.Core.Screen.Screen},Action{UnityScreenNavigator.Runtime.Core.Screen.Screen},Action{UnityScreenNavigator.Runtime.Core.Screen.Screen},Action{UnityScreenNavigator.Runtime.Core.Screen.Screen})
  isExtensionMethod: true
  parent: UnityScreenNavigator.Runtime.Core.Screen.ScreenContainerExtensions
  langs:
  - csharp
  - vb
  name: AddCallbackReceiver(ScreenContainer, Screen, Action<Screen>, Action<Screen>, Action<Screen>, Action<Screen>)
  nameWithType: ScreenContainerExtensions.AddCallbackReceiver(ScreenContainer, Screen, Action<Screen>, Action<Screen>, Action<Screen>, Action<Screen>)
  fullName: UnityScreenNavigator.Runtime.Core.Screen.ScreenContainerExtensions.AddCallbackReceiver(UnityScreenNavigator.Runtime.Core.Screen.ScreenContainer, UnityScreenNavigator.Runtime.Core.Screen.Screen, Action<UnityScreenNavigator.Runtime.Core.Screen.Screen>, Action<UnityScreenNavigator.Runtime.Core.Screen.Screen>, Action<UnityScreenNavigator.Runtime.Core.Screen.Screen>, Action<UnityScreenNavigator.Runtime.Core.Screen.Screen>)
  type: Method
  source:
    id: AddCallbackReceiver
    path: ''
    startLine: 3235
  assemblies:
  - cs.temp.dll
  namespace: UnityScreenNavigator.Runtime.Core.Screen
  summary: "\nAdd callbacks.\n"
  example: []
  syntax:
    content: public static void AddCallbackReceiver(this ScreenContainer self, Screen screen, Action<Screen> onBeforePush = null, Action<Screen> onAfterPush = null, Action<Screen> onBeforePop = null, Action<Screen> onAfterPop = null)
    parameters:
    - id: self
      type: UnityScreenNavigator.Runtime.Core.Screen.ScreenContainer
      description: ''
    - id: screen
      type: UnityScreenNavigator.Runtime.Core.Screen.Screen
      description: ''
    - id: onBeforePush
      type: Global.Action{UnityScreenNavigator.Runtime.Core.Screen.Screen}
      description: ''
    - id: onAfterPush
      type: Global.Action{UnityScreenNavigator.Runtime.Core.Screen.Screen}
      description: ''
    - id: onBeforePop
      type: Global.Action{UnityScreenNavigator.Runtime.Core.Screen.Screen}
      description: ''
    - id: onAfterPop
      type: Global.Action{UnityScreenNavigator.Runtime.Core.Screen.Screen}
      description: ''
    content.vb: Public Shared Sub AddCallbackReceiver(self As ScreenContainer, screen As Screen, onBeforePush As Action(Of Screen) = Nothing, onAfterPush As Action(Of Screen) = Nothing, onBeforePop As Action(Of Screen) = Nothing, onAfterPop As Action(Of Screen) = Nothing)
  overload: UnityScreenNavigator.Runtime.Core.Screen.ScreenContainerExtensions.AddCallbackReceiver*
  nameWithType.vb: ScreenContainerExtensions.AddCallbackReceiver(ScreenContainer, Screen, Action(Of Screen), Action(Of Screen), Action(Of Screen), Action(Of Screen))
  fullName.vb: UnityScreenNavigator.Runtime.Core.Screen.ScreenContainerExtensions.AddCallbackReceiver(UnityScreenNavigator.Runtime.Core.Screen.ScreenContainer, UnityScreenNavigator.Runtime.Core.Screen.Screen, Action(Of UnityScreenNavigator.Runtime.Core.Screen.Screen), Action(Of UnityScreenNavigator.Runtime.Core.Screen.Screen), Action(Of UnityScreenNavigator.Runtime.Core.Screen.Screen), Action(Of UnityScreenNavigator.Runtime.Core.Screen.Screen))
  name.vb: AddCallbackReceiver(ScreenContainer, Screen, Action(Of Screen), Action(Of Screen), Action(Of Screen), Action(Of Screen))
references:
- uid: UnityScreenNavigator.Runtime.Core.Screen
  commentId: N:UnityScreenNavigator.Runtime.Core.Screen
  name: UnityScreenNavigator.Runtime.Core.Screen
  nameWithType: UnityScreenNavigator.Runtime.Core.Screen
  fullName: UnityScreenNavigator.Runtime.Core.Screen
  spec.csharp:
  - uid: UnityScreenNavigator
    name: UnityScreenNavigator
  - name: .
  - uid: UnityScreenNavigator.Runtime
    name: Runtime
  - name: .
  - uid: UnityScreenNavigator.Runtime.Core
    name: Core
  - name: .
  - uid: UnityScreenNavigator.Runtime.Core.Screen
    name: Screen
  spec.vb:
  - uid: UnityScreenNavigator
    name: UnityScreenNavigator
  - name: .
  - uid: UnityScreenNavigator.Runtime
    name: Runtime
  - name: .
  - uid: UnityScreenNavigator.Runtime.Core
    name: Core
  - name: .
  - uid: UnityScreenNavigator.Runtime.Core.Screen
    name: Screen
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityScreenNavigator.Runtime.Core.Screen.ScreenContainerExtensions.AddCallbackReceiver*
  commentId: Overload:UnityScreenNavigator.Runtime.Core.Screen.ScreenContainerExtensions.AddCallbackReceiver
  name: AddCallbackReceiver
  nameWithType: ScreenContainerExtensions.AddCallbackReceiver
  fullName: UnityScreenNavigator.Runtime.Core.Screen.ScreenContainerExtensions.AddCallbackReceiver
- uid: UnityScreenNavigator.Runtime.Core.Screen.ScreenContainer
  commentId: T:UnityScreenNavigator.Runtime.Core.Screen.ScreenContainer
  parent: UnityScreenNavigator.Runtime.Core.Screen
  name: ScreenContainer
  nameWithType: ScreenContainer
  fullName: UnityScreenNavigator.Runtime.Core.Screen.ScreenContainer
- uid: Global.Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Screen.Screen,UnityScreenNavigator.Runtime.Core.Screen.Screen}}
  commentId: '!:Global.Action{System.ValueTuple{UnityScreenNavigator.Runtime.Core.Screen.Screen,UnityScreenNavigator.Runtime.Core.Screen.Screen}}'
  definition: Global.Action`1
  name: Action<(Screen enterScreen, Screen exitScreen)>
  nameWithType: Action<(Screen enterScreen, Screen exitScreen)>
  fullName: Action<(UnityScreenNavigator.Runtime.Core.Screen.Screen enterScreen, UnityScreenNavigator.Runtime.Core.Screen.Screen exitScreen)>
  nameWithType.vb: Action(Of (enterScreen As Screen, exitScreen As Screen))
  fullName.vb: Action(Of (enterScreen As UnityScreenNavigator.Runtime.Core.Screen.Screen, exitScreen As UnityScreenNavigator.Runtime.Core.Screen.Screen))
  name.vb: Action(Of (enterScreen As Screen, exitScreen As Screen))
  spec.csharp:
  - uid: Global.Action`1
    name: Action
    isExternal: true
  - name: <
  - name: (
  - uid: UnityScreenNavigator.Runtime.Core.Screen.Screen
    name: Screen
  - name: " "
  - uid: System.ValueTuple{UnityScreenNavigator.Runtime.Core.Screen.Screen,UnityScreenNavigator.Runtime.Core.Screen.Screen}.enterScreen
    name: enterScreen
  - name: ','
  - name: " "
  - uid: UnityScreenNavigator.Runtime.Core.Screen.Screen
    name: Screen
  - name: " "
  - uid: System.ValueTuple{UnityScreenNavigator.Runtime.Core.Screen.Screen,UnityScreenNavigator.Runtime.Core.Screen.Screen}.exitScreen
    name: exitScreen
  - name: )
  - name: '>'
  spec.vb:
  - uid: Global.Action`1
    name: Action
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{UnityScreenNavigator.Runtime.Core.Screen.Screen,UnityScreenNavigator.Runtime.Core.Screen.Screen}.enterScreen
    name: enterScreen
  - name: " "
  - name: As
  - name: " "
  - uid: UnityScreenNavigator.Runtime.Core.Screen.Screen
    name: Screen
  - name: ','
  - name: " "
  - uid: System.ValueTuple{UnityScreenNavigator.Runtime.Core.Screen.Screen,UnityScreenNavigator.Runtime.Core.Screen.Screen}.exitScreen
    name: exitScreen
  - name: " "
  - name: As
  - name: " "
  - uid: UnityScreenNavigator.Runtime.Core.Screen.Screen
    name: Screen
  - name: )
  - name: )
- uid: Global.Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Global.Action`1
    name: Action
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Global.Action`1
    name: Action
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: UnityScreenNavigator.Runtime.Core.Screen.Screen
  commentId: T:UnityScreenNavigator.Runtime.Core.Screen.Screen
  parent: UnityScreenNavigator.Runtime.Core.Screen
  name: Screen
  nameWithType: Screen
  fullName: UnityScreenNavigator.Runtime.Core.Screen.Screen
- uid: Global.Action{UnityScreenNavigator.Runtime.Core.Screen.Screen}
  commentId: '!:Global.Action{UnityScreenNavigator.Runtime.Core.Screen.Screen}'
  definition: Global.Action`1
  name: Action<Screen>
  nameWithType: Action<Screen>
  fullName: Action<UnityScreenNavigator.Runtime.Core.Screen.Screen>
  nameWithType.vb: Action(Of Screen)
  fullName.vb: Action(Of UnityScreenNavigator.Runtime.Core.Screen.Screen)
  name.vb: Action(Of Screen)
  spec.csharp:
  - uid: Global.Action`1
    name: Action
    isExternal: true
  - name: <
  - uid: UnityScreenNavigator.Runtime.Core.Screen.Screen
    name: Screen
  - name: '>'
  spec.vb:
  - uid: Global.Action`1
    name: Action
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: UnityScreenNavigator.Runtime.Core.Screen.Screen
    name: Screen
  - name: )
